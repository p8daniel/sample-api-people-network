[tox]
envlist = py{311}-{unit,integration}
deps =
    pip

[testenv]
description = run the test with pytest under {basepython}
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
deps =
    pytest-cov >= 2.11.1, <3
commands =
    integration: pytest ./tests/integration
    unit: pytest {posargs: --cov="{envsitepackagesdir}/app" \
    unit: --cov-config="./tests/pytest.ini" --cov-report=html ./tests/unit}

passenv =
    NEO4J_URI

[testenv:mypy]
basepython = python3.11
deps =
    mypy==1.5.1
    PyYAML=="6.0.1"
commands =
    mypy --config-file .tools-cfg/mypy.ini app


[testenv:flake8]
skip_install = true
basepython = python3.11
deps =
    flake8~=6.1.0
    flake8-eradicate~=1.5.0
commands =
    flake8 --config .tools-cfg/flake8 app tests


[testenv:pylint]
basepython = python3.11
deps =
    pylint~=3.0.1
    pyenchant~=3.2.2
allowlist_externals =
    bash
commands =
    pylint app --rcfile .tools-cfg/pylintrc -j 0
    bash -c 'find ./tests/ -name "*.py" | tr "\n" " " | xargs pylint --rcfile .tools-cfg/pylintrc-test -j 0'

[testenv:black]
skip_install = true
basepython = python3.11
envdir = {toxworkdir}/black
deps =
    black==23.9.1
commands =
    black --check --config .tools-cfg/black-cfg.toml tests app

[testenv:black-run]
skip_install = true
basepython = python3.11
envdir = {toxworkdir}/black
deps =
    black==23.9.1
commands =
    black --config .tools-cfg/black-cfg.toml tests app

[testenv:isort]
skip_install = true
basepython = python3.11
envdir = {toxworkdir}/isort
deps =
    isort~=5.12.0
commands =
    isort --settings-path .tools-cfg --src-path . --check-only tests app

[testenv:isort-run]
skip_install = true
basepython = python3.11
envdir = {toxworkdir}/isort
deps =
    isort~=5.12.0
commands =
    isort --settings-path .tools-cfg --src-path . tests app

[testenv:bandit]
skip_install = true
basepython = python3.11
deps =
    bandit~=1.7.5
commands =
    bandit app -r
    # avoid assert warning and password in unit tests
    bandit tests/unit -r -c .tools-cfg/bandit-unit.yaml
    # avoid assert warning
    bandit tests/functional -r -c .tools-cfg/bandit-functional.yaml
    bandit tests/integration -r -c .tools-cfg/bandit-functional.yaml


[testenv:combine]
skip_install = true
basepython = python3.11
deps =
    coverage~=7.3.2
commands =
    coverage combine --rcfile .tools-cfg/.coveragerc \
        {toxworkdir}/.coverage.py311-unit \
        {toxworkdir}/.coverage.py311-with-auth \
        {toxworkdir}/.coverage.py311-functional
    coverage xml --rcfile .tools-cfg/.coveragerc
    coverage report


[testenv:bumpversion]
skip_install = true
basepython = python3.11
envdir = {toxworkdir}/bumpversion
allowlist_externals = git
deps =
    bump2version~=1.0.1
    towncrier~=23.6.0
commands =
    bumpversion --config-file .tools-cfg/bumpversion.cfg {posargs}
    towncrier build --config .tools-cfg/towncrier.toml --dir . --yes
    # the index should only have the changelog modified as bumpversion needs a clean repo
    git commit --amend --no-edit -a
